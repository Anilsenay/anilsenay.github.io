{"version":3,"sources":["components/Title.js","components/Whoami.js","components/GlowingButton.js","components/Contact.js","components/Header.js","components/Home.js","components/Project.js","components/Projects.js","App.js","serviceWorker.js","index.js"],"names":["Title","className","Component","Whoami","intervalID","this","setInterval","document","querySelector","style","backgroundColor","clearInterval","paragraphs_tr","href","GlowingButton","state","isGlow","twitter","instagram","github","linkedin","toggleBox","setState","prevState","onMouseEnter","onMouseLeave","props","social","aria-hidden","text","Contact","Header","to","Home","Project","projectName","project_name","substring","length","id","useEffect","info","link","role","aria-valuenow","aria-valuemin","aria-valuemax","width","progress","Projects","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.84a7ac31.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Title extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Anıl Şenay</h1>\n                <div className=\"under-title\">Kişisel Web Sayfası</div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Whoami extends Component {\n\n    intervalID = 0;\n    \n    componentDidMount(){\n        this.intervalID = setInterval(() => {\n            (document.querySelector('.i').style.backgroundColor === \"rgb(64, 62, 66)\") ? (document.querySelector('.i').style = '') : (document.querySelector('.i').style = 'background-color: #403e42');\n        }, 500);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalID)\n    }\n\n    render() {\n\n        const paragraphs_tr = [\n            <p>Selam ben Anıl. Marmara Üniversitesi'nde Bilgisayar Mühendisliği okuyorum. Çocukluğumdan beri bilgisayarla ilgileniyorum. Bir merak, tutku ile başladığım kodlama ve tasarım artık hayatımın büyük bir parçası olmuş durumda. </p>,\n            <p>Kendimi <a href=\"https://frpnet.net/makaleler/geek-nedir\">Geek</a> olarak tanımlayabilirim. Bilgisayar oyunları, sinema, çizgi roman, bilim kurgu ve fantastik kitaplar günlük hayatımda bolca tükettiğim ve vakit ayırdığım ilgi alanlarım. </p>\n        ]\n\n        const paragraphs_en = [\n            <p>Hi, I am Anıl. I am studying Computer Engineering at Marmara University. I've been interested in computers since I was a kid. I started coding and designing with a curiosity, passion then they became a big part of my life. </p>,\n            <p>I could call myself a <a href=\"https://www.dictionary.com/e/dork-dweeb-nerd-geek-oh/\">Geek</a>. Computer games, cinema, comics, science fiction and fantasy books are my interests which I have consumed and spent time in my daily life. </p>\n        ]\n\n        return (\n            <div className=\"whoami\">\n                <div className=\"whoami-text\">\n                    <div>~$ whoam<span className=\"i\">i</span></div>  \n                </div>\n                {paragraphs_tr[0]}\n                {paragraphs_tr[1]}\n            </div>\n        )\n    }\n}\n//style={{backgroundColor: '#403e42'}}","import React, { Component } from 'react'\n\nexport default class GlowingButton extends Component {\n\n    state = {\n        isGlow:false,\n        twitter:\"https://twitter.com/anilsenay\",\n        instagram:\"https://instagram.com/anilsenay\",\n        github:\"https://github.com/anilsenay\",\n        linkedin:\"https://linkedin.com/in/anılşenay\"\n    };\n\n    toggleBox = () => {\n        this.setState(prevState => ({ isGlow: !prevState.isGlow }));\n    };\n\n    render() {\n        const { isGlow } = this.state;\n\n        return (\n            <div className={\"buttons-display\"}\n                onMouseEnter={() => {this.toggleBox()}}\n                onMouseLeave={() => {this.toggleBox()}}>\n                <a href={this.state[this.props.social]} className=\"buttons\">\n                    <div className={`box ${isGlow ? `${this.props.social}-text`: \"\"}`}><i className={`fab fa-${this.props.social} icon-margin`} aria-hidden=\"true\"/>\n                        <span>{this.props.text}</span>\n                    </div>\n                </a>\n            </div> \n        )\n    }\n}\n","import React, { Component } from 'react'\nimport GlowingButton from './GlowingButton'\n\nexport default class Contact extends Component {\n\n    render() {\n        return (\n            <div className=\"contact\">\n                <div className=\"contact-text\">Email: anilsenay3@gmail.com</div>\n                <div className=\"contact-text\">GPG: 0x91A3D10D</div>\n                <div className=\"contact-text contact-text-bigger\">Sosyal Medya</div>\n                \n                <div>\n                    <GlowingButton text=\"@anilsenay\" social=\"twitter\"></GlowingButton>\n                    <GlowingButton text=\"@anilsenay\" social=\"instagram\"></GlowingButton>\n                    <GlowingButton text=\"@anilsenay\" social=\"github\"></GlowingButton>\n                    <GlowingButton text=\"/anılşenay\" social=\"linkedin\"></GlowingButton>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <Link to=\"/\" className=\"header-links\">/home</Link>\n                <Link to=\"/projects\" className=\"header-links\">/projects</Link>\n          </div>\n        )\n    }\n}\n","import React from 'react';\nimport '../App.css';\nimport Title from './Title';\nimport Whoami from './Whoami';\nimport Contact from './Contact';\nimport Header from './Header';\n\nfunction Home() {\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <div className=\"container\">\n        <Title/>\n        <hr/>\n        <Whoami/>\n        <hr/>\n        <Contact/>\n        <hr/>\n      </div>\n    </div>\n  )\n}\n\nexport default Home;\n","import React, {useEffect, useState} from 'react'\n\nexport default function Project(props) {\n\n    //const [projectName, setProjectName] = useState(0);\n    // const [info, setInfo] = useState(\"\");\n    const projectName = props.projectName + \"\";\n    const project_name = [projectName.substring(0, projectName.length-1), projectName[projectName.length-1] ]\n    let intervalID = props.id\n\n    useEffect(() => {\n        intervalID = setInterval(() => {\n            (document.querySelector(`#${props.id}`).style.backgroundColor === \"rgb(64, 62, 66)\") ? (document.querySelector(`#${props.id}`).style = '') : (document.querySelector(`#${props.id}`).style = 'background-color: #403e42');\n        }, 500);\n\n        return () => clearInterval(intervalID)\n    }, [])\n\n    return (\n        <div className=\"project\">\n            <div className=\"whoami-text\">\n                <div>~$ ./{project_name[0]}<span id={(props.id)} className=\"i\">{project_name[1]}</span></div>  \n            </div>\n            <p>{props.info}</p>\n            <p>Github: <a href={props.link}>{props.link}</a></p>\n            <div className=\"progress\">\n                <div className=\"progress-bar progress-bar-striped progress-bar-animated progress-bar-color\" role=\"progressbar\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width: `${props.progress}`}}></div>\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport Header from './Header'\nimport Title from './Title'\nimport '../App.css';\nimport Project from './Project'\n\nexport default class Projects extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n              <Header/>\n              <div className=\"container\">\n                <Title/>\n                <hr/>\n                <h3>Projelerim</h3>\n                <hr/>\n                <Project\n                  id=\"project1\"\n                  projectName=\"Change My Mind\"\n                  info=\"> Android ile uğraştığım bir uygulama. Bir süreliğine ara verdim. Son halini Github'da bulabilirsiniz.\"\n                  link=\"https://github.com/Anilsenay/Change_My_Mind\"\n                  progress=\"25%\"\n                />\n                <hr/>\n                <Project\n                id=\"project2\"\n                projectName=\"Mushroom Meshwork\"\n                info=\" > Bu aslında bize derste verilen bir proje. Fakat içine sevgimi de kattığım bir iş oldu. Sadece not alıp geçmek için yapılan bir proje olarak görmedim. Daha fazlasıydı. \"\n                link=\"https://github.com/Anilsenay/School-Game-Project\"\n                progress=\"100%\"\n                />\n                <hr/>\n              </div>\n            </div>\n          )\n    }\n}\n","import React from 'react';\nimport Home from './components/Home';\nimport Projects from './components/Projects'\n\nimport { BrowserRouter, Route, HashRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div>\n      <HashRouter basename='/'>\n        <Route exact path='/' component={Home}/>\n        <Route path='/projects' component={Projects}/>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}