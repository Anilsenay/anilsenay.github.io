{"version":3,"sources":["components/Title.js","components/Whoami.js","components/GlowingButton.js","components/Contact.js","components/Header.js","pages/Home.js","components/Project.js","pages/Projects.js","projects.js","App.js","serviceWorker.js","index.js"],"names":["Title","className","Component","Whoami","intervalID","this","setInterval","document","querySelector","style","backgroundColor","clearInterval","paragraphs_tr","type","show","color","href","strokeWidth","data-tip","data-html","GlowingButton","state","isGlow","twitter","instagram","github","linkedin","toggleBox","setState","prevState","onMouseEnter","onMouseLeave","props","social","aria-hidden","text","Contact","Header","to","Home","Project","projectName","project_name","substring","length","id","useEffect","info","link","role","aria-valuenow","aria-valuemin","aria-valuemax","width","progress","Projects","useState","repos","setRepos","projects","setProjects","fetch","then","response","json","data","ProjectsFromJson","concat","filter","item","some","e","name","map","toString","key","description","html_url","find","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a80a1384.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Title extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Anıl Şenay</h1>\n                <div className=\"under-title\">Kişisel Web Sayfası</div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport '../App.css'\nimport { RoughNotation } from \"react-rough-notation\";\n\nexport default class Whoami extends Component {\n\n    intervalID = 0;\n    \n    componentDidMount(){\n        this.intervalID = setInterval(() => {\n            (document.querySelector('.i').style.backgroundColor === \"rgb(64, 62, 66)\") ? (document.querySelector('.i').style = '') : (document.querySelector('.i').style = 'background-color: #403e42');\n        }, 500);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalID)\n    }\n\n    render() {\n\n        const hacker = \"Hacking ifadesi gibi değişken bir ifade için basit bir tanım yapmak zordur; ama birçok hacker'ın ortak özelliği oyuncu, zeki ve keşifçi olmalarıdır. Bu nedenle hacking, oyuncu bir zeka ruhunda mümkün olanın sınırlarını keşfetmek anlamına gelmektedir. Oyuncu zeka gösteren etkinlikler hack değerine sahiptir.\\n\\n – Richard Stallman, “Hacking Hakkında”\"\n\n        const paragraphs_tr = [\n            <p>Selam ben Anıl. Marmara Üniversitesi'nde Bilgisayar Mühendisliği okuyorum. Çocukluğumdan beri bilgisayarla ilgileniyorum. Bir merak, tutku ile başladığım kodlama ve tasarım artık hayatımın büyük bir parçası olmuş durumda. </p>,\n            <p>Kendimi <RoughNotation type=\"box\" show={true} color=\"green\"><a href=\"https://frpnet.net/makaleler/geek-nedir\">Geek</a></RoughNotation> olarak tanımlayabilirim. Bilgisayar oyunları, sinema, çizgi roman, bilim kurgu ve fantastik kitaplar günlük hayatımda bolca tükettiğim ve vakit ayırdığım ilgi alanlarım. </p>,\n            <p>Yazılım dünyasına girişim ise web tasarım ile başladı. O zamanlar(~2012) henüz Html5 bile yoktu ve Frontpage kullanılıyordu. Birkaç yıl web tasarım ile ilgilendikten sonra uzun bir süre web tarafında bir geliştirme yapmadım. Şu sıralar tekrardan frontend ile ilgileniyorum. <RoughNotation type=\"underline\" strokeWidth={2} show={true} color=\"green\">React</RoughNotation> ile web, <RoughNotation type=\"underline\" strokeWidth={2} show={true} color=\"green\">React Native</RoughNotation> ile mobil uygulama geliştiriyorum. Kod yazmak dışında Figma ve XD ile UI tasarımı da yapıyorum. Bunun dışında küçük yaşlardan beridir hack kültürünün içindeyim ve kendimi <span className=\"tool\" data-tip={hacker} data-html=\"true\" >hacker</span>(cracker değil) olarak da tanımlayabilirim. Bu hack kültüründen gelen aktivist bir tutum olarak da özgür yazılım savucusuyum ve mümkün olduğunca özgür yazılımları kullanmayı tercih ediyorum.</p>\n        ]\n\n\n        return (\n            <div className=\"whoami\">\n                <div className=\"whoami-text\">\n                    <div>~$ whoam<span className=\"i\">i</span></div>  \n                </div>\n                {paragraphs_tr[0]}\n                {paragraphs_tr[1]}\n                {paragraphs_tr[2]}\n            </div>\n        )\n    }\n}\n//style={{backgroundColor: '#403e42'}}","import React, { Component } from 'react'\n\nexport default class GlowingButton extends Component {\n\n    state = {\n        isGlow:false,\n        twitter:\"https://twitter.com/anilsenay\",\n        instagram:\"https://instagram.com/anilsenay\",\n        github:\"https://github.com/anilsenay\",\n        linkedin:\"https://linkedin.com/in/anılşenay\"\n    };\n\n    toggleBox = () => {\n        this.setState(prevState => ({ isGlow: !prevState.isGlow }));\n    };\n\n    render() {\n        const { isGlow } = this.state;\n\n        return (\n            <div className={\"buttons-display\"}\n                onMouseEnter={() => {this.toggleBox()}}\n                onMouseLeave={() => {this.toggleBox()}}>\n                <a href={this.state[this.props.social]} className=\"buttons\">\n                    <div className={`box ${isGlow ? `${this.props.social}-text`: \"\"}`}><i className={`fab fa-${this.props.social} icon-margin`} aria-hidden=\"true\"/>\n                        <span>{this.props.text}</span>\n                    </div>\n                </a>\n            </div> \n        )\n    }\n}\n","import React, { Component } from 'react'\nimport GlowingButton from './GlowingButton'\n\nexport default class Contact extends Component {\n\n    render() {\n        return (\n            <div className=\"contact\">\n                <div className=\"contact-text\">Email: anilsenay3@gmail.com</div>\n                <div className=\"contact-text\">GPG: 0x91A3D10D</div>\n                <div className=\"contact-text contact-text-bigger\">Sosyal Medya</div>\n                \n                <div>\n                    <GlowingButton text=\"@anilsenay\" social=\"twitter\"></GlowingButton>\n                    <GlowingButton text=\"@anilsenay\" social=\"instagram\"></GlowingButton>\n                    <GlowingButton text=\"@anilsenay\" social=\"github\"></GlowingButton>\n                    <GlowingButton text=\"/anılşenay\" social=\"linkedin\"></GlowingButton>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <Link to=\"/\" className=\"header-links\">/home</Link>\n                <Link to=\"/projects\" className=\"header-links\">/projects</Link>\n          </div>\n        )\n    }\n}\n","import React from 'react';\nimport '../App.css';\nimport Title from '../components/Title';\nimport Whoami from '../components/Whoami';\nimport Contact from '../components/Contact';\nimport Header from '../components/Header';\n\nfunction Home() {\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <div className=\"container\">\n        <Title/>\n        <hr/>\n        <Whoami/>\n        <hr/>\n        <Contact/>\n        <hr/>\n      </div>\n    </div>\n  )\n}\n\nexport default Home;\n","import React, {useEffect} from 'react'\n\nexport default function Project(props) {\n\n    const projectName = props.projectName + \"\";\n    const project_name = [projectName.substring(0, projectName.length-1), projectName[projectName.length-1] ]\n    let intervalID = props.id\n\n    useEffect(() => {\n        intervalID = setInterval(() => {\n            (document.querySelector(`#${props.id}`).style.backgroundColor === \"rgb(64, 62, 66)\") ? (document.querySelector(`#${props.id}`).style = '') : (document.querySelector(`#${props.id}`).style = 'background-color: #403e42');\n        }, 500);\n\n        return () => clearInterval(intervalID)\n    }, [])\n\n    return (\n        <div className=\"project\">\n            <div className=\"whoami-text\">\n                <div>~$ ./{project_name[0]}<span id={(props.id)} className=\"i\">{project_name[1]}</span></div>  \n            </div>\n            <p>{props.info}</p>\n            <p>Github: <a href={props.link}>{props.link}</a></p>\n            <div className=\"progress\">\n                <div className=\"progress-bar progress-bar-striped progress-bar-animated progress-bar-color\" role=\"progressbar\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width: `${props.progress}`}}></div>\n            </div>\n            <hr/>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport Header from '../components/Header'\nimport Title from '../components/Title'\nimport '../App.css';\nimport Project from '../components/Project'\n\nimport ProjectsFromJson from '../projects';\n\nexport default function Projects() {\n\n  const [repos, setRepos] = useState([])\n  const projects = ProjectsFromJson();\n\n  useEffect(() => {\n    repos.length === 0 &&\n    fetch('https://api.github.com/users/anilsenay/repos?per_page=100')\n      .then(response => response.json())\n      .then(data => setRepos(repos.concat(data)));\n\n    (repos.length !== 0 && repos.length !== projects.length) && \n    setRepos(repos.filter(item => {\n        if(projects.some(e => e.name === item.name))\n          return item\n    }))\n  }, [projects, repos])\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <div className=\"container\">\n        <Title/>\n        <hr/>\n        <h3>Projelerim</h3>\n        <hr/>\n        {\n          repos.length === projects.length && \n\n          repos.map(item => {\n            return (\n              <Project\n                id={\"project\" + item.id.toString()}\n                key={item.id}\n                projectName={item.name}\n                info={`> ${item.description}`}\n                link={item.html_url}\n                progress={projects.find(e => e.name === item.name).progress + \"%\"}\n              />\n            )\n          })\n          \n        }\n\n      </div>\n    </div>\n  )\n}","//fetching json from github, so i can easily update projects with editing this json file in github.\n\nimport { useEffect, useState } from 'react'\n\nexport default function ProjectsFromJson () {\n    const [projects, setProjects] = useState({});\n\n    useEffect(() => {\n        fetch('https://raw.githubusercontent.com/Anilsenay/Personal-Website/master/src/projects.json')\n            .then(response => response.json())\n            .then(data => setProjects(data.projects));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    \n    return projects;\n}","import React from 'react';\nimport Home from './pages/Home';\nimport Projects from './pages/Projects'\n\nimport { BrowserRouter, Route, HashRouter } from 'react-router-dom';\n// changed BrowserRouter to HashRouter\nfunction App() {\n  return (\n    <div>\n      <HashRouter basename=\"/\">\n        <Route exact path='/' component={Home}/>\n        <Route path='/projects' component={Projects}/>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}